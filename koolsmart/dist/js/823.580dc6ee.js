"use strict";(self["webpackChunkxiaolou"]=self["webpackChunkxiaolou"]||[]).push([[823],{6823:function(e,t,i){i.r(t),i.d(t,{default:function(){return M}});var s=function(){var e=this,t=e._self._c;return t("div",{staticClass:"main"},[t("el-row",{staticClass:"panel"},[t("el-col",{staticClass:"sub-panel",attrs:{span:5}},[t("div",{staticClass:"title"},[t("div",[e._v("Device List")])]),t("div",{staticClass:"btn"},[t("el-button",{staticClass:"basic-btn",attrs:{icon:"el-icon-plus"},on:{click:e.addLocalDeviceBtnClick}},[e._v("Add Local Device")])],1),t("div",e._l(e.currentDeviceList,(function(i){return t("DeviceCard",{key:i.id,staticClass:"device-card",attrs:{device:i,imgUrl:i.renderPic},on:{addRenderPicBtnClick:e.handleAddRenderPicBtnClick}})})),1)]),t("el-col",{attrs:{span:14}},[t("el-row",{staticStyle:{height:"70%",padding:"40px"}},[t("el-image",{staticStyle:{"border-radius":"20px"},attrs:{width:"100%",src:e.backgroundUrl}})],1),t("el-row",{staticStyle:{height:"30%",padding:"20px"}},[t("el-button",{staticClass:"scene-btn",on:{click:e.handleSceneModePublishBtnClick}},[e._v("scene mode quick publish")]),t("el-button",{staticClass:"publish-btn",on:{click:e.handleDashboardPublishBtnClick}},[e._v("dashboard quick publish")])],1)],1),t("el-col",{staticClass:"sub-panel scene-mode-panel",attrs:{span:5}},[t("div",{staticClass:"title"},[t("div",[e._v("Scene Mode")])]),t("div",{staticClass:"btn"},[e.createSceneModeFlag?t("div",[t("el-input",{staticStyle:{width:"80%"},attrs:{size:"medium"},model:{value:e.newSceneModeName,callback:function(t){e.newSceneModeName=t},expression:"newSceneModeName"}},[t("el-button",{attrs:{slot:"append",icon:"el-icon-check"},on:{click:e.handleNewSceneModeBtnClick},slot:"append"})],1)],1):t("el-button",{staticClass:"scene-btn",attrs:{icon:"el-icon-plus"},on:{click:function(t){e.createSceneModeFlag=!0}}},[e._v("Add Scene Mode")])],1),t("div",{staticClass:"scene-list"},[t("el-collapse",{attrs:{accordion:""},model:{value:e.activeSceneMode,callback:function(t){e.activeSceneMode=t},expression:"activeSceneMode"}},e._l(e.sceneModeList,(function(i,s){return t("el-collapse-item",{key:s,attrs:{title:i.name,name:i.name}},e._l(i.entities,(function(i,a){return t("el-card",{key:s+"-"+a},[e._v(" "+e._s(i.original_name)+" "),t("el-radio-group",{model:{value:i.state,callback:function(t){e.$set(i,"state",t)},expression:"entity.state"}},[t("el-radio",{attrs:{label:"on"}},[e._v("on")]),t("el-radio",{attrs:{label:"off"}},[e._v("off")])],1)],1)})),1)})),1)],1)])],1),t("el-dialog",{staticClass:"basic-dialog",attrs:{title:"Add Local Device From Home Assistant",visible:e.addLocalDeviceDialogVisible,"modal-append-to-body":!0,width:"1000px"},on:{"update:visible":function(t){e.addLocalDeviceDialogVisible=t}}},[t("device-table",{attrs:{deviceList:e.localDeviceList},on:{deviceRowSelected:e.localDeviceSelected}}),t("el-button",{staticClass:"warn-btn",on:{click:function(t){e.addLocalDeviceDialogVisible=!1}}},[e._v("close")])],1),t("el-dialog",{staticClass:"basic-dialog renderpic-dialog",attrs:{title:"Add Render Picture",visible:e.addRenderPicDialogVisible,"modal-append-to-body":!1,width:"1000px"},on:{"update:visible":function(t){e.addRenderPicDialogVisible=t}}},[t("div",{staticClass:"renderpic-content"},e._l(e.renderPicList,(function(i,s){return t("div",{key:s,staticClass:"renderpic-card"},[t("el-checkbox",{on:{change:t=>{e.handleSelectedRenderPicChange(t,i)}}},[t("el-image",{attrs:{src:i,fit:"fill",width:"256px"}})],1)],1)})),0),t("el-button",{staticClass:"basic-btn",on:{click:e.handleAddRenderPicDialogConfirmBtnClick}},[e._v("confirm")])],1)],1)},a=[],n=(i(7658),i(6189)),c=i(8863),o=i(9480),l=function(){var e=this,t=e._self._c;return t("el-card",{attrs:{"body-style":{padding:"0px"}}},[e.imgUrl?t("el-image",{staticClass:"image",attrs:{height:"128px",src:e.imgUrl}}):t("div",{staticClass:"non-renderpic"},[t("el-button",{staticClass:"add-renderpic-btn",attrs:{plain:"",icon:"el-icon-plus",circle:""},on:{click:e.addRenderPicBtnClick}}),t("small",[e._v("add render picture")])],1),t("div",{staticClass:"device-name"},[t("el-tooltip",{staticClass:"item",attrs:{effect:"dark",content:e.device.entity_id,placement:"top"}},[t("span",[t("i",{staticClass:"el-icon-s-opportunity"}),e._v(e._s(e.device.original_name))])])],1)],1)},d=[],r={name:"DeviceCard",props:["device","imgUrl"],methods:{addRenderPicBtnClick(){this.$emit("addRenderPicBtnClick",this.device)}}},h=r,u=i(1001),p=(0,u.Z)(h,l,d,!1,null,"2f97304c",null),m=p.exports,v=i(306),g=function(){var e=this,t=e._self._c;return t("div",[t("el-table",{staticClass:"local-device-table",attrs:{data:e.innerDeviceList.filter((t=>!e.search||t.original_name&&t.original_name.toLowerCase().includes(e.search.toLowerCase()))),height:"400px"}},[t("el-table-column",{attrs:{prop:"original_name",label:"设备",width:"180","show-overflow-tooltip":""}}),t("el-table-column",{attrs:{prop:"entity_id",label:"实体ID",width:"180","show-overflow-tooltip":""}}),t("el-table-column",{attrs:{prop:"area_id",label:"区域"}}),t("el-table-column",{attrs:{prop:"platform",label:"平台"}}),t("el-table-column",{attrs:{label:"操作"},scopedSlots:e._u([{key:"default",fn:function(i){return[t("el-button",{staticClass:"basic-btn",attrs:{size:"small"},on:{click:function(t){return e.deviceSelected(i.row)}}},[e._v("添加")])]}}])},[t("template",{slot:"header"},[t("el-input",{attrs:{size:"mini",placeholder:"输入关键字搜索"},model:{value:e.search,callback:function(t){e.search=t},expression:"search"}})],1)],2)],1)],1)},b=[],f=i(1273),_={name:"DeviceTable",props:["deviceList"],data(){return{search:"",innerDeviceList:void 0}},created(){this.innerDeviceList=this.deviceList,f.log(this.innerDeviceList)},methods:{deviceSelected(e){this.$emit("deviceRowSelected",e)}}},k=_,C=(0,u.Z)(k,g,b,!1,null,null,null),D=C.exports,w=i(1273),y={name:"TestDesignView",components:{DeviceCard:m,DeviceTable:D},data(){return{manufacturers:["tuya","xiaomi_miot"],tanslations:["switch"],renderPicList:["http://10.10.7.98:8000/switch_background.jpg","http://10.10.7.98:8000/switch1_background.jpg","http://10.10.7.98:8000/switch2_background.jpg"],currentDeviceList:[],localDeviceList:void 0,sceneModeList:[],createSceneModeFlag:!1,newSceneModeName:"",activeSceneMode:void 0,backgroundUrl:"http://10.10.7.98:8000/switch_background.jpg",editedDevice:void 0,addLocalDeviceDialogVisible:!1,addRenderPicDialogVisible:!1,haWebsocketConnect:void 0}},async created(){await this.$store.dispatch("createWebsocket"),this.haWebsocketConnect=this.$store.getters.getHAWebsocket,this.getLocalDeviceFromHA()},methods:{pulishSceneModeRequest(){this.sceneModeList.forEach((e=>{let t={};e.entities.forEach((e=>{t[e.entity_id]={state:e.state}}));let i={name:e.name,icon:"mdi:flower-tulip",entities:t},s=(new Date).getTime()+Math.floor(1e7*Math.random())+"";e["unique_id"]=s,(0,v.Z)({method:"post",headers:{Authorization:"Bearer "+window.sessionStorage.getItem("ha_token")},url:`/api-ha/api/config/scene/config/${s}`,data:i}).then((e=>{}),(e=>{w.log(e)}))})),this.$notify.success({title:"publish scene mode success"})},getKoolSmartDashboardCfg(){},async updateSceneModeEntityId(){let e={type:"config/entity_registry/list"};const t=await this.haWebsocketConnect.sendMessagePromise(e).then((e=>e),(e=>{w.log("get Entity List Cfg Err",e)}));w.log("entityList",t),this.sceneModeList.forEach((e=>{let i=t.filter((t=>t.unique_id===e.unique_id));e["entity_id"]=i[0].entity_id}))},async updateKoolSmartDashboard(){await this.updateSceneModeEntityId();const e=this.sceneModeList.map((e=>({name:e.name,entity:e.entity_id,view_layout:{position:"sidebar"},show_name:!0,show_icon:!0,type:"button",icon:"mdi:home",icon_height:"30px",tap_action:{action:"toggle"}}))),t={view_layout:{position:"main"},type:"picture-elements",image:this.backgroundUrl,entities:this.currentDeviceList.map((e=>e.entity_id)),elements:this.currentDeviceList.map((e=>({type:"image",entity:e.entity_id,tap_action:{action:"none"},style:{"pointer-events":"none",top:"50%",left:"50%",width:"100%","mix-blend-mode":"screen"},state_image:{off:"/local/transparent.png",on:e.renderPic}})))};let i={type:"lovelace/config/save",url_path:"dashboard-test-koolsmart",config:{kiosk_mode:{hide_header:!0},views:[{path:"Home Design",title:"Home Design",type:"sidebar",cards:[t,...e]}]}};this.haWebsocketConnect.sendMessagePromise(i).then((e=>{this.$notify.success({title:"publish dashboard success"}),w.log("updateHADashboardCfg Res",e)}),(e=>{w.log("updateHADashboardCfg Err",e)}))},createKoolSmartDashboard(){let e={type:"lovelace/dashboards/create",url_path:"dashboard-test-koolsmart",mode:"storage",require_admin:!1,show_in_sidebar:!0,title:"Test-KoolSmart",icon:"mdi:react"};this.haWebsocketConnect.sendMessagePromise(e).then((e=>{w.log("createDashboardCfg Res",e)}),(e=>{w.log("createDashboardCfg Err",e)}))},handleSceneModePublishBtnClick(){this.pulishSceneModeRequest()},handleDashboardPublishBtnClick(){this.createKoolSmartDashboard(),this.updateKoolSmartDashboard(),w.log("device list",this.currentDeviceList),w.log("scene mode",this.sceneModeList)},handleNewSceneModeBtnClick(){const e={name:this.newSceneModeName,entities:[]};e.entities=this.currentDeviceList.map((e=>({...e,state:"off"}))),this.sceneModeList.push(e),this.newSceneModeName="",this.createSceneModeFlag=!1},handleSelectedRenderPicChange(e,t){e&&(this.editedDevice.renderPic=t)},handleAddRenderPicDialogConfirmBtnClick(){this.currentDeviceList.forEach((e=>{e.entity_id===this.editedDevice.entity_id&&(e.renderPic=this.editedDevice.renderPic)})),this.addRenderPicDialogVisible=!1},handleAddRenderPicBtnClick(e){this.editedDevice=e,this.addRenderPicDialogVisible=!0},updateSceneModeList(e,t){"add"===e?this.sceneModeList.forEach((e=>{e.entities.push({...t,state:"off"})})):"del"===e&&this.sceneModeList.forEach((e=>{e.entities=e.entities.filter((e=>e.entity_id!==t.entity_id))}))},addLocalDeviceBtnClick(){this.addLocalDeviceDialogVisible=!0},localDeviceSelected(e){0===this.currentDeviceList.filter((t=>t.id===e.id)).length?(this.currentDeviceList.push({renderPic:"",...e}),this.updateSceneModeList("add",e)):this.$message({type:"warning",message:`${e.entity_id} has been added.`})},async initHAWebsocketConnect(){window.sessionStorage.removeItem("ha_token"),window.sessionStorage.removeItem("hass_url");let e,t=JSON.parse(window.localStorage.getItem("hassTokens"));null!=t&&(window.sessionStorage.setItem("ha_token",t.access_token),window.sessionStorage.setItem("hass_url",t.hassUrl));try{e=await(0,n.v0)()}catch(i){if(i!==c.Js)return void this.$notify.error({title:"error",message:i});{const i=window.sessionStorage.getItem("hass_url");e=await(0,n.v0)({hassUrl:i,loadTokens:()=>t})}}this.haWebsocketConnect=await(0,o.I5)({auth:e})},getLocalDeviceFromHA(){let e={type:"config/entity_registry/list"};this.haWebsocketConnect.sendMessagePromise(e).then((e=>{this.localDeviceList=e.filter((e=>this.manufacturers.includes(e.platform)))}),(e=>{w.log("getDeviceRequestCfg Err",e)}))}}},S=y,L=(0,u.Z)(S,s,a,!1,null,"09af9b1a",null),M=L.exports}}]);
//# sourceMappingURL=823.580dc6ee.js.map