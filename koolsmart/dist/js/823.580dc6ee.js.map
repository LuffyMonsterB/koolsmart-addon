{"version":3,"file":"js/823.580dc6ee.js","mappings":"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","sources":["webpack://xiaolou/./src/views/TestDesignView/index.vue","webpack://xiaolou/./src/views/TestDesignView/components/DeviceCard.vue","webpack://xiaolou/src/views/TestDesignView/components/DeviceCard.vue","webpack://xiaolou/./src/views/TestDesignView/components/DeviceCard.vue?1b66","webpack://xiaolou/./src/views/TestDesignView/components/DeviceCard.vue?8e71","webpack://xiaolou/./src/views/TestDesignView/components/DeviceTable.vue","webpack://xiaolou/src/views/TestDesignView/components/DeviceTable.vue","webpack://xiaolou/./src/views/TestDesignView/components/DeviceTable.vue?cf3d","webpack://xiaolou/./src/views/TestDesignView/components/DeviceTable.vue?3138","webpack://xiaolou/src/views/TestDesignView/index.vue","webpack://xiaolou/./src/views/TestDesignView/index.vue?abd8","webpack://xiaolou/./src/views/TestDesignView/index.vue?cbca"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"main\"},[_c('el-row',{staticClass:\"panel\"},[_c('el-col',{staticClass:\"sub-panel\",attrs:{\"span\":5}},[_c('div',{staticClass:\"title\"},[_c('div',[_vm._v(\"Device List\")])]),_c('div',{staticClass:\"btn\"},[_c('el-button',{staticClass:\"basic-btn\",attrs:{\"icon\":\"el-icon-plus\"},on:{\"click\":_vm.addLocalDeviceBtnClick}},[_vm._v(\"Add Local Device\")])],1),_c('div',_vm._l((_vm.currentDeviceList),function(item){return _c('DeviceCard',{key:item.id,staticClass:\"device-card\",attrs:{\"device\":item,\"imgUrl\":item.renderPic},on:{\"addRenderPicBtnClick\":_vm.handleAddRenderPicBtnClick}})}),1)]),_c('el-col',{attrs:{\"span\":14}},[_c('el-row',{staticStyle:{\"height\":\"70%\",\"padding\":\"40px\"}},[_c('el-image',{staticStyle:{\"border-radius\":\"20px\"},attrs:{\"width\":\"100%\",\"src\":_vm.backgroundUrl}})],1),_c('el-row',{staticStyle:{\"height\":\"30%\",\"padding\":\"20px\"}},[_c('el-button',{staticClass:\"scene-btn\",on:{\"click\":_vm.handleSceneModePublishBtnClick}},[_vm._v(\"scene mode quick publish\")]),_c('el-button',{staticClass:\"publish-btn\",on:{\"click\":_vm.handleDashboardPublishBtnClick}},[_vm._v(\"dashboard quick publish\")])],1)],1),_c('el-col',{staticClass:\"sub-panel scene-mode-panel\",attrs:{\"span\":5}},[_c('div',{staticClass:\"title\"},[_c('div',[_vm._v(\"Scene Mode\")])]),_c('div',{staticClass:\"btn\"},[(_vm.createSceneModeFlag)?_c('div',[_c('el-input',{staticStyle:{\"width\":\"80%\"},attrs:{\"size\":\"medium\"},model:{value:(_vm.newSceneModeName),callback:function ($$v) {_vm.newSceneModeName=$$v},expression:\"newSceneModeName\"}},[_c('el-button',{attrs:{\"slot\":\"append\",\"icon\":\"el-icon-check\"},on:{\"click\":_vm.handleNewSceneModeBtnClick},slot:\"append\"})],1)],1):_c('el-button',{staticClass:\"scene-btn\",attrs:{\"icon\":\"el-icon-plus\"},on:{\"click\":function($event){_vm.createSceneModeFlag = true}}},[_vm._v(\"Add Scene Mode\")])],1),_c('div',{staticClass:\"scene-list\"},[_c('el-collapse',{attrs:{\"accordion\":\"\"},model:{value:(_vm.activeSceneMode),callback:function ($$v) {_vm.activeSceneMode=$$v},expression:\"activeSceneMode\"}},_vm._l((_vm.sceneModeList),function(item,index1){return _c('el-collapse-item',{key:index1,attrs:{\"title\":item.name,\"name\":item.name}},_vm._l((item.entities),function(entity,index2){return _c('el-card',{key:index1 + '-' + index2},[_vm._v(\" \"+_vm._s(entity.original_name)+\" \"),_c('el-radio-group',{model:{value:(entity.state),callback:function ($$v) {_vm.$set(entity, \"state\", $$v)},expression:\"entity.state\"}},[_c('el-radio',{attrs:{\"label\":'on'}},[_vm._v(\"on\")]),_c('el-radio',{attrs:{\"label\":'off'}},[_vm._v(\"off\")])],1)],1)}),1)}),1)],1)])],1),_c('el-dialog',{staticClass:\"basic-dialog\",attrs:{\"title\":\"Add Local Device From Home Assistant\",\"visible\":_vm.addLocalDeviceDialogVisible,\"modal-append-to-body\":true,\"width\":\"1000px\"},on:{\"update:visible\":function($event){_vm.addLocalDeviceDialogVisible=$event}}},[_c('device-table',{attrs:{\"deviceList\":_vm.localDeviceList},on:{\"deviceRowSelected\":_vm.localDeviceSelected}}),_c('el-button',{staticClass:\"warn-btn\",on:{\"click\":function($event){_vm.addLocalDeviceDialogVisible = false}}},[_vm._v(\"close\")])],1),_c('el-dialog',{staticClass:\"basic-dialog renderpic-dialog\",attrs:{\"title\":\"Add Render Picture\",\"visible\":_vm.addRenderPicDialogVisible,\"modal-append-to-body\":false,\"width\":\"1000px\"},on:{\"update:visible\":function($event){_vm.addRenderPicDialogVisible=$event}}},[_c('div',{staticClass:\"renderpic-content\"},_vm._l((_vm.renderPicList),function(item,index){return _c('div',{key:index,staticClass:\"renderpic-card\"},[_c('el-checkbox',{on:{\"change\":(value) => {\n              _vm.handleSelectedRenderPicChange(value, item);\n            }}},[_c('el-image',{attrs:{\"src\":item,\"fit\":\"fill\",\"width\":\"256px\"}})],1)],1)}),0),_c('el-button',{staticClass:\"basic-btn\",on:{\"click\":_vm.handleAddRenderPicDialogConfirmBtnClick}},[_vm._v(\"confirm\")])],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('el-card',{attrs:{\"body-style\":{ padding: '0px' }}},[(_vm.imgUrl)?_c('el-image',{staticClass:\"image\",attrs:{\"height\":\"128px\",\"src\":_vm.imgUrl}}):_c('div',{staticClass:\"non-renderpic\"},[_c('el-button',{staticClass:\"add-renderpic-btn\",attrs:{\"plain\":\"\",\"icon\":\"el-icon-plus\",\"circle\":\"\"},on:{\"click\":_vm.addRenderPicBtnClick}}),_c('small',[_vm._v(\"add render picture\")])],1),_c('div',{staticClass:\"device-name\"},[_c('el-tooltip',{staticClass:\"item\",attrs:{\"effect\":\"dark\",\"content\":_vm.device.entity_id,\"placement\":\"top\"}},[_c('span',[_c('i',{staticClass:\"el-icon-s-opportunity\"}),_vm._v(_vm._s(_vm.device.original_name))])])],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <el-card :body-style=\"{ padding: '0px' }\">\n    <el-image height=\"128px\" :src=\"imgUrl\" class=\"image\" v-if=\"imgUrl\" />\n    <div class=\"non-renderpic\" v-else>\n      <el-button\n        plain\n        class=\"add-renderpic-btn\"\n        icon=\"el-icon-plus\"\n        circle\n        @click=\"addRenderPicBtnClick\"\n      ></el-button>\n      <small>add render picture</small>\n    </div>\n    <div class=\"device-name\">\n      <el-tooltip\n        class=\"item\"\n        effect=\"dark\"\n        :content=\"device.entity_id\"\n        placement=\"top\"\n      >\n        <span\n          ><i class=\"el-icon-s-opportunity\"></i>{{ device.original_name }}</span\n        >\n      </el-tooltip>\n    </div>\n  </el-card>\n</template>\n\n<script>\nexport default {\n  name: \"DeviceCard\",\n  props: [\"device\", \"imgUrl\"],\n  methods: {\n    addRenderPicBtnClick() {\n      this.$emit(\"addRenderPicBtnClick\", this.device);\n    },\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n.device-card {\n  border-radius: 8px;\n}\n.device-name {\n  padding: 2px;\n  margin-bottom: 8px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n.non-renderpic {\n  width: 100%;\n  height: 128px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  // border-bottom-left-radius: 8px;\n  // border-bottom-right-radius: 8px;\n  border-bottom: 2px dashed #aaa;\n  .add-renderpic-btn {\n    height: 50px;\n    width: 50px;\n  }\n}\n</style>\n","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DeviceCard.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DeviceCard.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./DeviceCard.vue?vue&type=template&id=2f97304c&scoped=true&\"\nimport script from \"./DeviceCard.vue?vue&type=script&lang=js&\"\nexport * from \"./DeviceCard.vue?vue&type=script&lang=js&\"\nimport style0 from \"./DeviceCard.vue?vue&type=style&index=0&id=2f97304c&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"2f97304c\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('el-table',{staticClass:\"local-device-table\",attrs:{\"data\":_vm.innerDeviceList.filter(\n        (data) =>\n          !_vm.search ||\n          (data.original_name &&\n            data.original_name.toLowerCase().includes(_vm.search.toLowerCase()))\n      ),\"height\":\"400px\"}},[_c('el-table-column',{attrs:{\"prop\":\"original_name\",\"label\":\"设备\",\"width\":\"180\",\"show-overflow-tooltip\":\"\"}}),_c('el-table-column',{attrs:{\"prop\":\"entity_id\",\"label\":\"实体ID\",\"width\":\"180\",\"show-overflow-tooltip\":\"\"}}),_c('el-table-column',{attrs:{\"prop\":\"area_id\",\"label\":\"区域\"}}),_c('el-table-column',{attrs:{\"prop\":\"platform\",\"label\":\"平台\"}}),_c('el-table-column',{attrs:{\"label\":\"操作\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{staticClass:\"basic-btn\",attrs:{\"size\":\"small\"},on:{\"click\":function($event){return _vm.deviceSelected(scope.row)}}},[_vm._v(\"添加\")])]}}])},[_c('template',{slot:\"header\"},[_c('el-input',{attrs:{\"size\":\"mini\",\"placeholder\":\"输入关键字搜索\"},model:{value:(_vm.search),callback:function ($$v) {_vm.search=$$v},expression:\"search\"}})],1)],2)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <el-table\n      :data=\"\n        innerDeviceList.filter(\n          (data) =>\n            !search ||\n            (data.original_name &&\n              data.original_name.toLowerCase().includes(search.toLowerCase()))\n        )\n      \"\n      class=\"local-device-table\"\n      height=\"400px\"\n    >\n      <el-table-column\n        prop=\"original_name\"\n        label=\"设备\"\n        width=\"180\"\n        show-overflow-tooltip\n      >\n      </el-table-column>\n      <el-table-column\n        prop=\"entity_id\"\n        label=\"实体ID\"\n        width=\"180\"\n        show-overflow-tooltip\n      >\n      </el-table-column>\n\n      <!-- <el-table-column prop=\"manufacturer\" label=\"制造商\"> </el-table-column> -->\n      <!-- <el-table-column prop=\"model\" label=\"型号\" show-overflow-tooltip> -->\n      <!-- </el-table-column> -->\n      <el-table-column prop=\"area_id\" label=\"区域\"> </el-table-column>\n      <el-table-column prop=\"platform\" label=\"平台\"> </el-table-column>\n      <el-table-column label=\"操作\">\n        <template slot=\"header\">\n          <el-input v-model=\"search\" size=\"mini\" placeholder=\"输入关键字搜索\" />\n        </template>\n        <template slot-scope=\"scope\">\n          <el-button\n            class=\"basic-btn\"\n            size=\"small\"\n            @click=\"deviceSelected(scope.row)\"\n            >添加</el-button\n          >\n        </template>\n      </el-table-column>\n    </el-table>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"DeviceTable\",\n  props: [\"deviceList\"],\n  data() {\n    return {\n      search: \"\",\n      innerDeviceList: undefined,\n    };\n  },\n  created() {\n    this.innerDeviceList = this.deviceList;\n    console.log(this.innerDeviceList);\n  },\n  methods: {\n    deviceSelected(deviceObj) {\n      this.$emit(\"deviceRowSelected\", deviceObj);\n    },\n  },\n};\n</script>\n\n<style></style>\n","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DeviceTable.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DeviceTable.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./DeviceTable.vue?vue&type=template&id=5f149042&\"\nimport script from \"./DeviceTable.vue?vue&type=script&lang=js&\"\nexport * from \"./DeviceTable.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div class=\"main\">\n    <el-row class=\"panel\">\n      <el-col :span=\"5\" class=\"sub-panel\">\n        <div class=\"title\">\n          <div>Device List</div>\n        </div>\n        <div class=\"btn\">\n          <el-button\n            class=\"basic-btn\"\n            icon=\"el-icon-plus\"\n            @click=\"addLocalDeviceBtnClick\"\n            >Add Local Device</el-button\n          >\n        </div>\n        <div>\n          <DeviceCard\n            class=\"device-card\"\n            v-for=\"item in currentDeviceList\"\n            :key=\"item.id\"\n            :device=\"item\"\n            :imgUrl=\"item.renderPic\"\n            @addRenderPicBtnClick=\"handleAddRenderPicBtnClick\"\n          />\n        </div>\n      </el-col>\n      <el-col :span=\"14\">\n        <el-row style=\"height: 70%; padding: 40px\">\n          <el-image\n            width=\"100%\"\n            style=\"border-radius: 20px\"\n            :src=\"backgroundUrl\"\n          ></el-image>\n        </el-row>\n        <el-row style=\"height: 30%; padding: 20px\">\n          <el-button class=\"scene-btn\" @click=\"handleSceneModePublishBtnClick\"\n            >scene mode quick publish</el-button\n          >\n          <el-button class=\"publish-btn\" @click=\"handleDashboardPublishBtnClick\"\n            >dashboard quick publish</el-button\n          >\n        </el-row>\n      </el-col>\n      <el-col :span=\"5\" class=\"sub-panel scene-mode-panel\">\n        <div class=\"title\">\n          <div>Scene Mode</div>\n        </div>\n        <div class=\"btn\">\n          <div v-if=\"createSceneModeFlag\">\n            <el-input\n              v-model=\"newSceneModeName\"\n              style=\"width: 80%\"\n              size=\"medium\"\n            >\n              <el-button\n                icon=\"el-icon-check\"\n                slot=\"append\"\n                @click=\"handleNewSceneModeBtnClick\"\n              ></el-button\n            ></el-input>\n          </div>\n\n          <el-button\n            class=\"scene-btn\"\n            icon=\"el-icon-plus\"\n            @click=\"createSceneModeFlag = true\"\n            v-else\n            >Add Scene Mode</el-button\n          >\n        </div>\n        <div class=\"scene-list\">\n          <el-collapse v-model=\"activeSceneMode\" accordion>\n            <el-collapse-item\n              :title=\"item.name\"\n              :name=\"item.name\"\n              v-for=\"(item, index1) in sceneModeList\"\n              :key=\"index1\"\n            >\n              <el-card\n                v-for=\"(entity, index2) in item.entities\"\n                :key=\"index1 + '-' + index2\"\n              >\n                {{ entity.original_name }}\n                <el-radio-group v-model=\"entity.state\">\n                  <el-radio :label=\"'on'\">on</el-radio>\n                  <el-radio :label=\"'off'\">off</el-radio>\n                </el-radio-group>\n              </el-card>\n            </el-collapse-item>\n          </el-collapse>\n        </div>\n      </el-col>\n    </el-row>\n    <el-dialog\n      title=\"Add Local Device From Home Assistant\"\n      :visible.sync=\"addLocalDeviceDialogVisible\"\n      :modal-append-to-body=\"true\"\n      width=\"1000px\"\n      class=\"basic-dialog\"\n    >\n      <device-table\n        :deviceList=\"localDeviceList\"\n        @deviceRowSelected=\"localDeviceSelected\"\n      />\n\n      <el-button class=\"warn-btn\" @click=\"addLocalDeviceDialogVisible = false\"\n        >close</el-button\n      >\n    </el-dialog>\n    <el-dialog\n      title=\"Add Render Picture\"\n      :visible.sync=\"addRenderPicDialogVisible\"\n      :modal-append-to-body=\"false\"\n      width=\"1000px\"\n      class=\"basic-dialog renderpic-dialog\"\n    >\n      <div class=\"renderpic-content\">\n        <div\n          class=\"renderpic-card\"\n          v-for=\"(item, index) in renderPicList\"\n          :key=\"index\"\n        >\n          <el-checkbox\n            @change=\"\n              (value) => {\n                handleSelectedRenderPicChange(value, item);\n              }\n            \"\n          >\n            <el-image :src=\"item\" fit=\"fill\" width=\"256px\"> </el-image>\n          </el-checkbox>\n        </div>\n      </div>\n      <el-button\n        class=\"basic-btn\"\n        @click=\"handleAddRenderPicDialogConfirmBtnClick\"\n        >confirm</el-button\n      >\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport {\n  getAuth,\n  createConnection,\n  ERR_HASS_HOST_REQUIRED,\n  subscribeEntities,\n} from \"home-assistant-js-websocket\";\nimport DeviceCard from \"./components/DeviceCard.vue\";\nimport axios from \"axios\";\nimport DeviceTable from \"./components/DeviceTable.vue\";\n\nexport default {\n  name: \"TestDesignView\",\n  components: {\n    DeviceCard,\n    DeviceTable,\n  },\n  data() {\n    return {\n      manufacturers: [\"tuya\", \"xiaomi_miot\"],\n      tanslations: [\"switch\"],\n      renderPicList: [\n        \"http://10.10.7.98:8000/switch_background.jpg\",\n        \"http://10.10.7.98:8000/switch1_background.jpg\",\n        \"http://10.10.7.98:8000/switch2_background.jpg\",\n      ],\n      currentDeviceList: [],\n      localDeviceList: undefined,\n      sceneModeList: [],\n      createSceneModeFlag: false,\n      newSceneModeName: \"\",\n      activeSceneMode: undefined,\n      backgroundUrl: \"http://10.10.7.98:8000/switch_background.jpg\",\n      editedDevice: undefined,\n      addLocalDeviceDialogVisible: false,\n      addRenderPicDialogVisible: false,\n      haWebsocketConnect: undefined,\n    };\n  },\n  async created() {\n    // 接入login后删除\n    await this.$store.dispatch(\"createWebsocket\");\n    this.haWebsocketConnect = this.$store.getters.getHAWebsocket;\n    this.getLocalDeviceFromHA();\n  },\n  methods: {\n    pulishSceneModeRequest() {\n      this.sceneModeList.forEach((sceneMode) => {\n        let entitiesMap = {};\n        sceneMode.entities.forEach((entity) => {\n          entitiesMap[entity.entity_id] = { state: entity.state };\n        });\n        let sceneRequestBody = {\n          name: sceneMode.name,\n          icon: \"mdi:flower-tulip\",\n          entities: entitiesMap,\n        };\n        // build scene, 只基于实体\n        let uid =\n          new Date().getTime() + Math.floor(Math.random() * 10000000) + \"\";\n        sceneMode[\"unique_id\"] = uid;\n        axios({\n          method: \"post\",\n          headers: {\n            Authorization:\n              \"Bearer \" + window.sessionStorage.getItem(\"ha_token\"),\n          },\n          url: `/api-ha/api/config/scene/config/${uid}`,\n          data: sceneRequestBody,\n        }).then(\n          (res) => {},\n          (err) => {\n            console.log(err);\n          }\n        );\n      });\n      this.$notify.success({\n        title: \"publish scene mode success\",\n      });\n    },\n    getKoolSmartDashboardCfg() {},\n    async updateSceneModeEntityId() {\n      let getDeviceRequestCfg = {\n        type: \"config/entity_registry/list\",\n      };\n      // use HA Websocket API sendMessagePromise to communicate with HA\n      const entityList = await this.haWebsocketConnect\n        .sendMessagePromise(getDeviceRequestCfg)\n        .then(\n          (res) => {\n            return res;\n          },\n          (err) => {\n            console.log(\"get Entity List Cfg Err\", err);\n          }\n        );\n      console.log(\"entityList\", entityList);\n      this.sceneModeList.forEach((scene) => {\n        let filterRes = entityList.filter(\n          (entity) => entity.unique_id === scene.unique_id\n        );\n        scene[\"entity_id\"] = filterRes[0].entity_id;\n      });\n    },\n    async updateKoolSmartDashboard() {\n      await this.updateSceneModeEntityId();\n      const sceneModeCardCfg = this.sceneModeList.map((scene) => {\n        return {\n          name: scene.name,\n          entity: scene.entity_id,\n          view_layout: { position: \"sidebar\" },\n          show_name: true,\n          show_icon: true,\n          type: \"button\",\n          icon: \"mdi:home\",\n          icon_height: \"30px\",\n          tap_action: {\n            action: \"toggle\",\n          },\n        };\n      });\n      const mainViewCfg = {\n        view_layout: { position: \"main\" },\n        type: \"picture-elements\",\n        image: this.backgroundUrl,\n        entities: this.currentDeviceList.map((device) => device.entity_id),\n        elements: this.currentDeviceList.map((device) => {\n          return {\n            type: \"image\",\n            entity: device.entity_id,\n            tap_action: { action: \"none\" },\n            style: {\n              \"pointer-events\": \"none\",\n              top: \"50%\",\n              left: \"50%\",\n              width: \"100%\",\n              \"mix-blend-mode\": \"screen\",\n            },\n            state_image: {\n              off: \"/local/transparent.png\",\n              on: device.renderPic,\n            },\n          };\n        }),\n      };\n      let updateHADashboardCfg = {\n        type: \"lovelace/config/save\",\n        url_path: \"dashboard-test-koolsmart\",\n        config: {\n          kiosk_mode: {\n            hide_header: true,\n          },\n          views: [\n            {\n              path: \"Home Design\",\n              title: \"Home Design\",\n              type: \"sidebar\",\n              cards: [mainViewCfg, ...sceneModeCardCfg],\n            },\n          ],\n        },\n      };\n      this.haWebsocketConnect.sendMessagePromise(updateHADashboardCfg).then(\n        (res) => {\n          this.$notify.success({\n            title: \"publish dashboard success\",\n          });\n          console.log(\"updateHADashboardCfg Res\", res);\n        },\n        (err) => {\n          console.log(\"updateHADashboardCfg Err\", err);\n        }\n      );\n    },\n    createKoolSmartDashboard() {\n      let createDashboardCfg = {\n        type: \"lovelace/dashboards/create\",\n        url_path: \"dashboard-test-koolsmart\",\n        mode: \"storage\",\n        require_admin: false,\n        show_in_sidebar: true,\n        title: \"Test-KoolSmart\",\n        icon: \"mdi:react\",\n      };\n      // use HA Websocket API sendMessagePromise to communicate with HA\n      this.haWebsocketConnect.sendMessagePromise(createDashboardCfg).then(\n        (res) => {\n          console.log(\"createDashboardCfg Res\", res);\n        },\n        (err) => {\n          console.log(\"createDashboardCfg Err\", err);\n        }\n      );\n    },\n    handleSceneModePublishBtnClick() {\n      this.pulishSceneModeRequest();\n    },\n    handleDashboardPublishBtnClick() {\n      this.createKoolSmartDashboard();\n      this.updateKoolSmartDashboard();\n      console.log(\"device list\", this.currentDeviceList);\n      console.log(\"scene mode\", this.sceneModeList);\n    },\n    handleNewSceneModeBtnClick() {\n      const newSceneMode = {\n        name: this.newSceneModeName,\n        entities: [],\n      };\n      newSceneMode.entities = this.currentDeviceList.map((item) => {\n        return { ...item, state: \"off\" };\n      });\n      this.sceneModeList.push(newSceneMode);\n      this.newSceneModeName = \"\";\n      this.createSceneModeFlag = false;\n    },\n    handleSelectedRenderPicChange(value, imgUrl) {\n      if (value) {\n        this.editedDevice.renderPic = imgUrl;\n      }\n    },\n    handleAddRenderPicDialogConfirmBtnClick() {\n      this.currentDeviceList.forEach((item) => {\n        if (item.entity_id === this.editedDevice.entity_id) {\n          item.renderPic = this.editedDevice.renderPic;\n        }\n      });\n      this.addRenderPicDialogVisible = false;\n    },\n    handleAddRenderPicBtnClick(deviceObj) {\n      this.editedDevice = deviceObj;\n      this.addRenderPicDialogVisible = true;\n    },\n    updateSceneModeList(type, deviceObj) {\n      if (type === \"add\") {\n        this.sceneModeList.forEach((item) => {\n          item.entities.push({ ...deviceObj, state: \"off\" });\n        });\n      } else if (type === \"del\") {\n        this.sceneModeList.forEach((item) => {\n          item.entities = item.entities.filter(\n            (entity) => entity.entity_id !== deviceObj.entity_id\n          );\n        });\n      }\n    },\n    addLocalDeviceBtnClick() {\n      this.addLocalDeviceDialogVisible = true;\n    },\n    localDeviceSelected(deviceObj) {\n      if (\n        this.currentDeviceList.filter((item) => item.id === deviceObj.id)\n          .length !== 0\n      ) {\n        this.$message({\n          type: \"warning\",\n          message: `${deviceObj.entity_id} has been added.`,\n        });\n        return;\n      }\n      this.currentDeviceList.push({\n        renderPic: \"\",\n        ...deviceObj,\n      });\n      this.updateSceneModeList(\"add\", deviceObj);\n      // this.addLocalDeviceDialogVisible = false;\n    },\n    async initHAWebsocketConnect() {\n      // get hassTokens after HA persistent login\n      window.sessionStorage.removeItem(\"ha_token\");\n      window.sessionStorage.removeItem(\"hass_url\");\n      let hassTokens = JSON.parse(window.localStorage.getItem(\"hassTokens\"));\n      if (hassTokens != null) {\n        window.sessionStorage.setItem(\"ha_token\", hassTokens.access_token);\n        window.sessionStorage.setItem(\"hass_url\", hassTokens.hassUrl);\n      }\n\n      let auth;\n      try {\n        // Try to pick up authentication after user logs in\n        auth = await getAuth();\n      } catch (err) {\n        if (err === ERR_HASS_HOST_REQUIRED) {\n          const hassUrl = window.sessionStorage.getItem(\"hass_url\");\n          // Redirect user to log in on their instance\n          auth = await getAuth({ hassUrl, loadTokens: () => hassTokens });\n        } else {\n          this.$notify.error({\n            title: \"error\",\n            message: err,\n          });\n          return;\n        }\n      }\n      this.haWebsocketConnect = await createConnection({ auth });\n      // You can test if the connection is successful\n      // subscribeEntities(this.haWebsocketConnect, (ent) => console.log(ent));\n    },\n    getLocalDeviceFromHA() {\n      let getDeviceRequestCfg = {\n        type: \"config/entity_registry/list\",\n      };\n      // use HA Websocket API sendMessagePromise to communicate with HA\n      this.haWebsocketConnect.sendMessagePromise(getDeviceRequestCfg).then(\n        (res) => {\n          this.localDeviceList = res.filter((item) =>\n            this.manufacturers.includes(item.platform)\n          );\n        },\n        (err) => {\n          console.log(\"getDeviceRequestCfg Err\", err);\n        }\n      );\n    },\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n.main {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n\n  .panel {\n    display: flex;\n    justify-content: center;\n    width: 80vw;\n    height: 90%;\n    background-color: white;\n    border-radius: 20px;\n    box-shadow: 4px 4px 8px rgba(0, 0, 0, 0.3);\n    .title {\n      text-align: center;\n      border-top-left-radius: 20px;\n      border-top-right-radius: 20px;\n      padding: 10px;\n      background-color: #f5f6fa;\n      font-size: 18px;\n      font-weight: 800;\n      line-height: 18px;\n    }\n    .sub-panel {\n      display: flex;\n      flex-direction: column;\n      border-radius: 20px;\n      box-shadow: 4px 0px 6px rgba(0, 0, 0, 0.1);\n\n      .btn {\n        text-align: center;\n        margin-top: 10px;\n        margin-bottom: 10px;\n      }\n      .device-card {\n        margin-left: 20px;\n        margin-right: 20px;\n        margin-bottom: 10px;\n      }\n      .scene-list {\n        overflow-y: scroll;\n        margin-left: 10px;\n        margin-right: 10px;\n      }\n    }\n    .scene-mode-panel {\n      box-shadow: -4px 0px 6px rgba(0, 0, 0, 0.1);\n    }\n  }\n  .el-col {\n    height: 100%;\n    overflow-y: scroll;\n  }\n}\n.local-device-table {\n  width: 100%;\n  margin-bottom: 20px;\n  padding: 10px;\n}\n.basic-dialog ::v-deep {\n  .el-dialog {\n    border-radius: 10px;\n    padding: 10px 20px 12px;\n    text-align: center;\n    max-height: 600px;\n    overflow-y: scroll;\n  }\n}\n\n.renderpic-dialog {\n  .renderpic-content {\n    display: flex;\n    width: 100%;\n    min-height: 400px;\n    .renderpic-card {\n      .el-image {\n        height: 200px;\n        width: 300px;\n        border-radius: 20px;\n      }\n\n      .el-checkbox::v-deep {\n        .el-checkbox__input {\n          float: right;\n          margin: 10px 10px 0 0;\n        }\n\n        .el-checkbox__inner {\n          border-radius: 50%;\n          height: 20px;\n          width: 20px;\n          border: 1px solid #fff;\n        }\n\n        .el-checkbox__inner::after {\n          height: 8px;\n          left: 7px;\n          top: 2.5px;\n          width: 4px;\n        }\n\n        .el-checkbox__label {\n          padding-left: 0;\n        }\n      }\n    }\n  }\n}\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=09af9b1a&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=09af9b1a&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"09af9b1a\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","attrs","_v","on","addLocalDeviceBtnClick","_l","currentDeviceList","item","key","id","renderPic","handleAddRenderPicBtnClick","staticStyle","backgroundUrl","handleSceneModePublishBtnClick","handleDashboardPublishBtnClick","createSceneModeFlag","model","value","newSceneModeName","callback","$$v","expression","handleNewSceneModeBtnClick","slot","$event","activeSceneMode","sceneModeList","index1","name","entities","entity","index2","_s","original_name","state","$set","addLocalDeviceDialogVisible","localDeviceList","localDeviceSelected","addRenderPicDialogVisible","renderPicList","index","handleSelectedRenderPicChange","handleAddRenderPicDialogConfirmBtnClick","staticRenderFns","padding","imgUrl","addRenderPicBtnClick","device","entity_id","props","methods","$emit","component","innerDeviceList","filter","data","search","toLowerCase","includes","scopedSlots","_u","fn","scope","deviceSelected","row","undefined","created","deviceList","console","log","deviceObj","components","DeviceCard","DeviceTable","manufacturers","tanslations","editedDevice","haWebsocketConnect","$store","dispatch","getters","getHAWebsocket","getLocalDeviceFromHA","pulishSceneModeRequest","forEach","sceneMode","entitiesMap","sceneRequestBody","icon","uid","Date","getTime","Math","floor","random","axios","method","headers","Authorization","window","sessionStorage","getItem","url","then","res","err","$notify","success","title","getKoolSmartDashboardCfg","updateSceneModeEntityId","getDeviceRequestCfg","type","entityList","sendMessagePromise","scene","filterRes","unique_id","updateKoolSmartDashboard","sceneModeCardCfg","map","view_layout","position","show_name","show_icon","icon_height","tap_action","action","mainViewCfg","image","elements","style","top","left","width","state_image","off","updateHADashboardCfg","url_path","config","kiosk_mode","hide_header","views","path","cards","createKoolSmartDashboard","createDashboardCfg","mode","require_admin","show_in_sidebar","newSceneMode","push","updateSceneModeList","length","$message","message","initHAWebsocketConnect","removeItem","auth","hassTokens","JSON","parse","localStorage","setItem","access_token","hassUrl","getAuth","ERR_HASS_HOST_REQUIRED","error","loadTokens","createConnection","platform"],"sourceRoot":""}